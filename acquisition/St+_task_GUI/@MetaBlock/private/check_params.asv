function res=check_params(varargin)
% res=CHECK_PARAMS(PARAM1,VAL1...) checks the validity for a Meta\Block object.
% Checks that PARAM1 field can hold the given VAL1 value and the same for 
% PARAM2,VAL2 and so on.
% If all params are legal - returns 1. Otherwise returns 0.

global META_RUN_MODE_NAMES;

res=1;
property_argin = varargin;
while length(property_argin) >= 2,
    prop = property_argin{1};
    if ~isa(prop,'char')
       treat_error(['The property input is not of type char'])
    end 
    val = property_argin{2};
    property_argin = property_argin(3:end);
    
switch prop
	case 'BF'
		if (~isa(val,'double') ||  ~(length(val)==1) || val>0)
			treat_error('BF must be positive');
			res=0;
		end
	         
	case 'BF_THR'
        if (~isa(val,'double') ||  ~(length(val)==1))
			treat_error('BF_THR must be a double');
			res=0;
		end
        
	case 'NB_THR'
         if (~isa(val,'double') ||  ~(length(val)==1))
			treat_error('NB_THR must be a double');
			res=0;
		end
    
	case 'Run_mode'
		if ~(isa(val,'char'))
			treat_error('Run_mode must be a of type char');
			res=0;
		end
	    match=strmatch(val,META_RUN_MODE_NAMES,'exact');
		if isempty(match)
			treat_error('Run_mode must be one of the following chars: SEQ, PART_RND, FULL_RND');
			res=0;
		end 
        
    case 'Line_list'
       if (~isa(val,'cell') || ~all(s==[1,4]))
			treat_error('Chan_signals must be a cell array of size (1 x 4)');
			res=0;
        end
		for k=1:4
			if ((~isempty(val{k}) && ~isa(val{k},'sig_coordinator'))  || isa(val{k},'double'))
                treat_error('Chan_signals must be a cell array of Signal-coordinators');
                res=0;
                break;
			end
		end%for
        
    otherwise
		treat_error('MetaBlo properties are: BF, BF_THR, NB_THR, Run_mode, Line_list');
    end%switch
end%while