function res=check_valid_update (sig,comp,input_method,varargin)
% check_valid_update(sig,comp,input_method,varargin)  checks updating the
% given comp with the given input_method and varargin will result in a
% valid  signal defenition.
% A valid signal definition is when the new number of trials defined by the
% component after updating it is equal to the number of trials already
% defined on this signal.
% returns 1-if valid,0-otherwise.


     param_argin = varargin;     
     
    switch input_method
       case 'STATIC_VALUE'
            res=1;
            case 'SWEEP'
                 if nargin==9 & length(varargin)==6
                 swp=Sweep(varargin{1},varargin{2},varargin{3},varargin{4},varargin{5},varargin{6});
                 coord_num=get(comp,'Coord_num');
                 coord_array=get(sig,'Coordinated_fields');
                  match=find(coord==coord_array);
                 if length(match)==1 %not coordinated with any other field
           res=1;
       elseif length(match)>1 %coordinated with other field/s
           for i=1:length(match)
               tmp=get(
         end
            case 'SEQ_VALUES'
                if nargin==3 & length(varargin{:})>=1
            s_comp=set(s_comp,'Input_method','SEQ_VALUES','Swp_on',0,'Seq_on',1,'Static_value',NULL_STATIC_VALUE,'Seq_values',varargin{:},'Sweep',NULL_SWEEP);
            else
             error('Wrong number of arguments');
         end
        otherwise
         error('Input method must be one of the following:  STATIC_VALUE, SWEEP, SEQ_VALUES');   
    end
   



comp=update_input_method(comp,input_method,varargin{:});
name=get(comp,'Name');
  sig=set(sig,name,comp);
  
